# =================================================
# Analyses des sorties de r??chantillonnage des p?res
# ====================================================

# Initialisation
rm(list = ls())

setwd("D:/Data_RG/Package_Assignation_nouveau/Package_Assignation_nouveau/reechantillonnageSir")

# Recuperation des fichiers

listFile <- list.files(pattern = 'per.txt')

# Resultats a exporter
output <- as.data.frame(matrix(NA, nrow = length(listFile), ncol = 11))
colnames(output) <- c('N0', 'N1', 'N2', 'N3', 'N4', 'N5', 'bonne_assignation', 'sd_bonne', 'mauvaise_assignation', 'sd_mauvaise', 'nb>erreur')
rownames(output) <- c(1:16)
cpt <- 1

par(mfrow = c(4,4))

tot <- rep(NA, 13)

for (i in listFile) {
  data <- read.table(i, row.names = 1, sep = ' ')
  colnames(data) <- paste0('N', c(0:5))

  result = as.data.frame(t(apply(data, 2, sum)))

  data$bonne_assignation  <- 100 * (data$N1) / (data$N1 + data$N2 + data$N4)
  data$mauvaise_assignation <- 100 * (data$N2 + data$N4) / (data$N1 + data$N2 + data$N4)
  data$Geno         <- data$N0 - (data$N4 + data$N5)
  data$per          <- as.integer(substring(strsplit(i, '_')[[1]][3], 1, 1))
  data$P            <- as.integer(strsplit(strsplit(i, '_')[[1]][2], 'p')[[1]][2])
  data$missing      <- as.integer(strsplit(strsplit(i, '_')[[1]][2], 'p')[[1]][1])

  tot <- rbind(tot, data)

  colnames(result) <- paste0('N', c(0:5))
  result$mean_bonne <- mean(data$bonne_assignation)
  result$sd_bonne   <- sd(data$bonne_assignation)
  result$mean_mauvaise <- mean(data$mauvaise_assignation)
  result$sd_mauvaise   <- sd(data$mauvaise_assignation)

  perErreur <- as.integer(substring(strsplit(i, '_')[[1]][3], 1, 1))

  result$nbSup       <- length(which(data$erreur > as.numeric(perErreur)))

  output[cpt,] <- result
  rownames(output)[cpt] <- substring(i, 19, nchar(i))

  # plot(x = data$Geno, y = data$erreur, main = substring(i, 19, nchar(i)))

  cpt = cpt + 1

}

write.table(tot[-1,], 'resultats_tot_reechantillonnageSir.txt', col.names = T, row.names = T, quote = F, sep = " ")
write.table(output, 'resultats_reechantillonnageSir.txt', col.names = T, row.names = T, quote = F, sep = " ")

tot <- tot[-1,]
plot(tot$Geno[which(tot$per == 1)], tot$erreur[which(tot$per == 1)])
points(tot$Geno[which(tot$per == 5)], tot$erreur[which(tot$per == 5)], col = 'red')

# =================================================================================================
# GRAPH
# =================================================================================================

library(ggplot2)

setwd("D:/Data_RG/Package_Assignation_nouveau/Package_Assignation_nouveau/reechantillonnageSir")
data <- read.csv2('resultats_tot_reechantillonnageSir.csv')
data$Assignment_Rate <- data$Assignment_Rate * 100

data$marker <- as.factor(data$marker)
levels(data$marker) <- c("35 markers", "42 markers", "50 markers", "100 markers")

levels(data$Assignment_Quality) <- c("True assignment", "Wrong assignment")

dataSplit <- split(data, data$missing.sire)

for (l in c(1:2)) {
  dataPlot <- dataSplit[[l]]

  plt <- ggplot(data = dataPlot, aes(x = dataPlot$method, y = dataPlot$Assignment_Rate, fill = dataPlot$Assignment_Quality)) +
    geom_bar(stat="identity", position = "dodge", width = 0.8) +
    scale_fill_manual(values = c("gray60", "gray30")) +
    geom_col(position = position_stack(reverse = T)) +
    theme(axis.text.x = element_text(angle = 90)) +
    theme(axis.title.x = element_text(margin = margin(20, 0, 0, 0))) +
    theme(axis.title.y = element_text(margin = margin(0, 20, 0, 0))) +
    ylim(0,120) +
    facet_wrap(~ dataPlot$marker, nrow = 1) +
    labs(x = "Software", y = "SAR (%)", colour = "Assignment quality", fill = "Assignment quality")

  setwd("C:/Users/rgriot/Desktop/Publication")
  # png(filename = paste0("reSampling_sire",l,".png"), height = 13, width = 17, units = "cm", res = 500)
  plt
  # dev.off()
}
