---
title: "APIS: An Auto-Adaptive Parentage Inference Software tolerant to missing parents"
author: "Ronan GRIOT"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Vignette Title}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

# Description
This package include all the functions to assign with APIS (Griot & al., 2019).
Parentage assignment is widely used for farmed and natural populations. As most of the likelihood software are based on simulation, the estimation of the simulation parameters is a key point for assignment reliability. Among those parameters, the proportion of missing parent is one of the most important. To avoid estimation of missing parents, we developed APIS (Auto-Adaptive Parentage Inference Software), based on observed average Mendelian transmission probabilities.

# Install and load the package
```{r, }
# devtools::install_github("rgriot/APIS")
require(APIS)
```

# Formate your data
APIS requires matrices of characters.
Each matrix has individuals as rows, markers as columns. The individual labels are set as rownames. Each cell is the genotype of one marker, coded "All1/All2". For example "A/A", "A/B", "B/B" for bi-allelic markers and "NA/NA" for missing value.

```{r}
setwd("../data/")
data_raw <- as.matrix(read.table(file = "example_genotype_raw.txt", row.names = 1))

head(data_raw[,1:10])

data <- data_raw

data[data == 0]   <- "A/A"
data[data == 1]   <- "A/B"
data[data == 2]   <- "B/B"
data[data == -9]  <- "NA/NA"

head(data[,1:10])
rownames(data[1:6,])
```

# Prepare the inputs
APIS main function requires 4 inputs :

  * off.genotype = matrix of offspring genotypes
  
  * sire.genotype = matrix of sires genotypes
  
  * dam.genotype = matrix of dams genotypes
  
  * error = accepted assignment error rate (What is the maximum error rate I accept in my assignment results ?)

```{r}
off.genotype <- data[which(rownames(data) %in% c(21:1020)),]
sire.genotype <- data[which(rownames(data) %in% c(1:10)),]
dam.genotype <- data[which(rownames(data) %in% c(11:20)),]
error <- 0.05 #I accept 5% of errors in the results
```

# Running the assignment
The main function to perform parentage assignment with APis the "APIS" function

```{r}
# result <- APIS(off.genotype = off.genotype,
#                sire.genotype = sire.genotype,
#                dam.genotype = dam.genotype,
#                error = error)
```

# Analyse the results
APIS gives you 3 different outputs :
  
  * pedigree
  
  * log containing Mendelian transmission probabilities for the first 3 parent pairs
  
  * graphs

Following graphs were drawn from an example dataset. The Mendelian transmission probabilities values are higher than a real-world example. However, the distribution shapes are realistic.

```{r , echo=FALSE, fig.cap="Average Mendelian transmission probability distributions calculated on 1000 offspring from 10 sires and 10 dams, genotyped on 400 markers", out.width = '100%'}
knitr::include_graphics('D:/Data_RG/package APIS/APIS/vignettes/distrib2.png')
```
When all parents are present, the distribution of P1 has one mode and the distribution of P2 also has one mode

```{r , echo=FALSE, fig.cap="Average Mendelian transmission probability distributions calculated on 1000 offspring from 5 sires (+ 5 sires missing) and 10 dams, genotyped on 400 markers", out.width = '100%'}
knitr::include_graphics('D:/Data_RG/package APIS/APIS/vignettes/distrib1.png')
```
When all parents are missing, the distribution of P1 has two modes :

  * The one with the highest values representing offspring with both parents present
  
  * The one with the lowest values, under the P2 distribution, representing the offspring with missing pareny

and the distribution of P2 also has one mode.

# Annexe

```{r info}
print(sessionInfo(), locale=FALSE)
```
