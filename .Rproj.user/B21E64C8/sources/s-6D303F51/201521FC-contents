#' assignmentPower
#'
#' This function calculates the theoretical assignment power of the marker set
#' @param sire Sire genotypes | Matrix (n*p) where n = number of individuals, p = number of markers
#' rownames(sire) = labels of sires
#' marker coding = "All1/All2" example: "A/A", "A/B", "NA/NA" (for missing genotype)
#' @param dam Dam genotypes | Matrix (n*p) where n = number of individuals, p = number of markers
#' rownames(dam) = labels of dams
#' marker coding = "All1/All2" example: "A/A", "A/B", "NA/NA" (for missing genotype)
#' @keywords assignment exclusion power
#' @export Pu Theoretical assignment power of the marker set

assignmentPower <- function(sire, dam) {
  # DESCRIPTION
  # This function calculates the theoretical assignment power as proposed in Vandeputte, M (2012)

  pop <- rbind(sire, dam)

  # Importe the allFreq function and calculate the allele frequencies
  setwd("C:/Users/rgriot/Dropbox/phD/Assignation")
  source('allFreq.R')
  freq <- CalcFreq(as.matrix(pop))

  col <- which(colnames(freq)=='tot')
  freq.calc <- as.data.frame(freq[,((col+1):ncol(freq))])
  freq.calc <- freq.calc[,-which(colnames(freq.calc) == "Freq_NA")]

  mcol <- ncol(freq.calc)

  # Calculate Q1 and Q3 for each marker
  freq.calc$Q1i <- 1 - 2*rowSums(freq.calc[,1:mcol]^2) +
    rowSums(freq.calc[,1:mcol]^3) + 2*rowSums(freq.calc[,1:mcol]^4) -
    2*rowSums(freq.calc[,1:mcol]^2)^2 - 3*rowSums(freq.calc[,1:mcol]^5) +
    3*rowSums(freq.calc[,1:mcol]^3)*rowSums(freq.calc[,1:mcol]^2)

  freq.calc$Q3i <- 1 + 4*rowSums(freq.calc[,1:mcol]^4) -
    4*rowSums(freq.calc[,1:mcol]^5) - 3*rowSums(freq.calc[,1:mcol]^6) -
    8*rowSums(freq.calc[,1:mcol]^2)^2 + 2*rowSums(freq.calc[,1:mcol]^3)^2 +
    8*rowSums(freq.calc[,1:mcol]^3)*rowSums(freq.calc[,1:mcol]^2)

  # Calculate the global Q1 and Q3
  Q1 <- 1 - prod(1-freq.calc$Q1i)
  Q3 <- 1 - prod(1-freq.calc$Q3i)

  # Calculate the assignment power
  Pu <- Q1^(nrow(dam)+nrow(sire)-2)*Q3^((nrow(dam)-1)*(nrow(sire)-1))

  # Return the result
  return(Pu)
}
